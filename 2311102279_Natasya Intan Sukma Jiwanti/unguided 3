package main

import (
	"fmt"
)

const nMax int = 7919

type Buku struct {
	id, judul, penulis, penerbit string
	eksemplar, tahun, rating   int
}

type daftarbuku []Buku 

func daftarkanbuku(pustaka *daftarbuku, n int) {
	var databuku Buku
	for i := 0; i < n; i++ {
		fmt.Printf("Masukkan ID buku ke-%d: ", i+1)
		fmt.Scan(&databuku.id)
		fmt.Printf("Masukkan Judul buku ke-%d: ", i+1)
		fmt.Scan(&databuku.judul)
		fmt.Printf("Masukkan Penulis buku ke-%d: ", i+1)
		fmt.Scan(&databuku.penulis)
		fmt.Printf("Masukkan Penerbit buku ke-%d: ", i+1)
		fmt.Scan(&databuku.penerbit)
		fmt.Printf("Masukkan Eksemplar buku ke-%d: ", i+1)
		fmt.Scan(&databuku.eksemplar)
		fmt.Printf("Masukkan Tahun Terbit buku ke-%d: ", i+1)
		fmt.Scan(&databuku.tahun)
		fmt.Printf("Masukkan Rating buku ke-%d: ", i+1)
		fmt.Scan(&databuku.rating)
		*pustaka = append(*pustaka, databuku) // Append to the slice
	}
}

func cetakFavorit(pustaka daftarbuku, n int) {
	if n == 0 {
		fmt.Println("Tidak ada buku dalam daftar.")
		return
	}
	terfav := pustaka[0] 
	for _, buku := range pustaka {
		if buku.rating > terfav.rating {
			terfav = buku 
		}
	}
	fmt.Printf("\nBuku terfavorit:\nID: %s\nJudul: %s\nPenulis: %s\nPenerbit: %s\nEksemplar: %d\nTahun Terbit: %d\nRating: %d\n", terfav.id, terfav.judul, terfav.penulis, terfav.penerbit, terfav.eksemplar, terfav.tahun, terfav.rating)
}

func urutbuku(pustaka daftarbuku, n int) {
	for i := 1; i < n; i++ {
		key := pustaka[i]
		j := i - 1
		for j >= 0 && pustaka[j].rating < key.rating { 
			pustaka[j+1] = pustaka[j]
			j--
		}
		pustaka[j+1] = key
	}
}

func cetakTop5(pustaka daftarbuku) {
	fmt.Println("\n5 Judul Buku Terfavorit:")
	i := 0
	for _, buku := range pustaka {
		if i < 5 {
			fmt.Printf("%d. %s (Rating: %d)\n", i+1, buku.judul, buku.rating)
			i++
		} else {
			break
		}
	}
}

func caribuku(pustaka daftarbuku, n int, r int) {
	left, right := 0, n-1
	found := false

	for left <= right {
		mid := left + (right-left)/2
		if pustaka[mid].rating == r {
			fmt.Printf("Buku dengan rating %d ditemukan: %+v\n", r, pustaka[mid])
			found = true
			break 
		} else if pustaka[mid].rating < r {
			right = mid - 1
		} else {
			left = mid + 1
		}
	}

	if !found {
		fmt.Printf("Tidak ada buku dengan rating %d\n", r)
	}
}

func main() {
	var pustaka daftarbuku
	var n int
	var r int 

	fmt.Print("Masukkan jumlah buku yang ingin ditambahkan: ")
	fmt.Scan(&n)

	if n <= nMax {
		daftarkanbuku(&pustaka, n)
		urutbuku(pustaka, n) 
		cetakFavorit(pustaka, n)
		fmt.Print("Masukkan rating buku yang ingin dicari: ")
		fmt.Scan(&r)
		caribuku(pustaka, n, r)
		cetakTop5(pustaka)
	} else {
		fmt.Println("Inputan anda melebihi kapasitas maksimal")
	}
}
